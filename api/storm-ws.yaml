openapi: 3.0.0

info:

    title: SpatioTemporal Open Research Manager Web Service

    description: |
        SpatioTemporal Open Research Manager Web Service is designed to enhance reproducible research collaboratively.

    version: '0.1'
    contact:
        name: Brazil Data Cube Team
        url: 'https://discord.com/channels/689541907621085198#'
        email: brazildatacube@inpe.br

    license:
        name: MIT
        url: 'https://opensource.org/licenses/MIT'

paths:
    /:
        get:
            tags:
                - Root
            summary: Root entrypoint
            description: Returns the root entrypoint in the service
            responses:
                '200':
                    $ref: '#/components/responses/Root'

    #
    # Project
    #
    /projects/:
        get:
            tags:
                - Research Project
            summary: Get all projects available for the user
            description: Get all projects available for the user
            responses:
                '200':
                    $ref: '#/components/responses/ListOfProjectCreatedModelResponseBody'

        post:
            tags:
                - Research Project
            summary: Create a new Research Project
            description: Create a new Research Project

            requestBody:
                $ref: '#/components/requestBodies/ProjectDefinitionModelRequestBody'

            responses:
                '201':
                    $ref: '#/components/responses/ProjectCreatedModelResponseBody'

    /projects/{project_id}:
        parameters:
            -   $ref: '#/components/parameters/project_id'

        get:
            tags:
                - Research Project
            summary: Get a specific project
            description: Get a specific project if it is available for the current user
            responses:
                '200':
                    $ref: '#/components/responses/ListOfProjectCreatedModelResponseBody'

        put:
            tags:
                - Research Project
            summary: Edit a project
            description: Edit a specific project if it is available for the current user
            requestBody:
                $ref: '#/components/requestBodies/ProjectDefinitionModelRequestBody'
            responses:
                '200':
                    $ref: '#/components/responses/ListOfProjectCreatedModelResponseBody'

        delete:
            tags:
                - Research Project
            summary: Delete a project
            description: Delete a project if user is admin
            responses:
                '200':
                    description: Deleted

    #
    # Research pipeline
    #
    /projects/{project_id}/pipelines:
        parameters:
            -   $ref: '#/components/parameters/project_id'

        get:
            tags:
                - Research Pipeline
            summary: List all research pipelines associated to the project
            description: List all ResearchPipelines.
            responses:
                '200':
                    $ref: '#/components/responses/ListOfProjectPipelineModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

        post:
            tags:
                - Research Pipeline
            summary: Create a new Research pipeline
            description: Create a new Research Pipeline and associate it to the defined Project.
            requestBody:
                $ref: '#/components/requestBodies/ProjectDefinitionModelRequestBody'
            responses:
                '200':
                    $ref: '#/components/responses/ProjectPipelineModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

    /projects/{project_id}/pipelines/{pipeline_id}:
        parameters:
            -   $ref: '#/components/parameters/project_id'
            -   $ref: '#/components/parameters/pipeline_id'

        get:
            tags:
                - Research Pipeline
            summary: Describe a specific Research pipeline.
            description: Get all informations that related to a specific Project Research Pipeline.
            responses:
                '200':
                    $ref: '#/components/responses/ProjectPipelineModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

        delete:
            tags:
                - Research Pipeline
            summary: Delete a Research Pipeline
            description: Delete a Research Pipeline from a specific project.
            responses:
                '200':
                    description: Deleted
                '404':
                    $ref: '#/components/responses/Error'

    /projects/{project_id}/pipelines/{pipeline_id}/actions/add/compendium/{compendium_id}:
        parameters:
            -   $ref: '#/components/parameters/compendium_id'
            -   $ref: '#/components/parameters/project_id'
            -   $ref: '#/components/parameters/pipeline_id'

        post:
            tags:
                - Research Pipeline
            summary: Create a new Execution Compendium in the Research Pipeline.
            description: Add an already published Execution Compendium to the Research Pipeline
            responses:
                '200':
                    $ref: '#/components/responses/ProjectPipelineModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

    /projects/{project_id}/pipelines/{pipeline_id}/actions/delete/compendium/{compendium_id}:
        parameters:
            -   $ref: '#/components/parameters/compendium_id'
            -   $ref: '#/components/parameters/project_id'
            -   $ref: '#/components/parameters/pipeline_id'

        delete:
            tags:
                - Research Pipeline
            summary: Delete a Execution Compendium from Research Pipeline.
            description: Delete a Execution Compendium from Research Pipeline of a given Project.
            responses:
                '200':
                    description: Deleted
                '404':
                    $ref: '#/components/responses/Error'

    #
    # Execution Compendium
    #
    /projects/{project_id}/compendia:
        parameters:
            -   $ref: '#/components/parameters/project_id'

        get:
            tags:
                - Execution Compendium
            summary: List all nodes associades to the project
            description: List all Project Nodes, and their versions.
            responses:
                '200':
                    $ref: '#/components/responses/ListOfExecutionCompendiumModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'


    /projects/{project_id}/compendia/{compendium_id}:
        parameters:
            -   $ref: '#/components/parameters/project_id'
            -   $ref: '#/components/parameters/compendium_id'

        get:
            tags:
                - Execution Compendium
            summary: List all execution compendia associades to the project.
            description: List all execution compendia, and their versions.
            responses:
                '200':
                    $ref: '#/components/responses/ExecutionCompendiumModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

    /projects/{project_id}/compendia/{compendium_id}/versions:
        parameters:
            -   $ref: '#/components/parameters/project_id'
            -   $ref: '#/components/parameters/compendium_id'

        post:
            tags:
                - Execution Compendium (Versions)
            summary: Create a new Execution Compendium version
            description: Create a new version of an already published Execution Compendium.
            responses:
                '200':
                    $ref: '#/components/responses/ExecutionCompendiumModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

        get:
            tags:
                - Execution Compendium (Versions)
            summary: Get all NodeRecord versions
            description: Get all versions of an already published NodeRecord.
            responses:
                '200':
                    $ref: '#/components/responses/ListOfExecutionCompendiumModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

    /projects/{project_id}/compendia/{compendium_id}/versions/latest:
        parameters:
            -   $ref: '#/components/parameters/project_id'
            -   $ref: '#/components/parameters/compendium_id'

        get:
            tags:
                - Execution Compendium (Versions)
            summary: Get the NodeRecord latest version
            description: Get the latest version of a NodeRecord.
            responses:
                '200':
                    $ref: '#/components/responses/ExecutionCompendiumModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

    #
    # Execution Compendium (Files)
    #
    /projects/{project_id}/compendia/{compendium_id}/files:
        parameters:
            -   $ref: '#/components/parameters/project_id'
            -   $ref: '#/components/parameters/compendium_id'

        get:
            tags:
                - Execution Compendium (Files)
            summary: List all Execution Compendium files
            description: List all Execution Compendium files
            responses:
                '200':
                    $ref: '#/components/responses/ExecutionCompendiumFilesDefinitionModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

    /projects/{project_id}/compendia/{compendium_id}/files/{file_key}:
        parameters:
            -   $ref: '#/components/parameters/project_id'
            -   $ref: '#/components/parameters/compendium_id'
            -   $ref: '#/components/parameters/file_key'

        get:
            tags:
                - Execution Compendium (Files)
            summary: Get a record file metadata
            description: Get a record file metadata
            responses:
                '200':
                    $ref: '#/components/responses/ExecutionCompendiumFileMetadataModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

    /projects/{project_id}/compendia/{compendium_id}/files/{file_key}/content:
        parameters:
            -   $ref: '#/components/parameters/project_id'
            -   $ref: '#/components/parameters/compendium_id'
            -   $ref: '#/components/parameters/file_key'

        get:
            tags:
                - Execution Compendium (Files)
            summary: Download a Execution Compendium file content.
            description: Download the file content.
            responses:
                '200':
                    $ref: '#/components/responses/BinaryResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

    #
    # Execution Compendium (Draft)
    #
    /projects/{project_id}/compendia/{compendium_id}/draft:
        parameters:
            -   $ref: '#/components/parameters/project_id'
            -   $ref: '#/components/parameters/compendium_id'
        get:
            tags:
                - Execution Compendium (Draft)
            summary: Get an already defined Execution Compendium Draft
            description: Get an already defined Execution Compendium Draft
            responses:
                '200':
                    $ref: '#/components/responses/ExecutionCompendiumModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

        put:
            tags:
                - Execution Compendium (Draft)
            summary: Update an already defined Execution Compendium Draft.
            description: Update an already defined Execution Compendium Draft.
            requestBody:
                $ref: '#/components/requestBodies/ExecutionCompendiumDraftRequestBody'
            responses:
                '200':
                    $ref: '#/components/responses/ExecutionCompendiumModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

        post:
            tags:
                - Execution Compendium (Draft)
            summary: Create a new draft from an already published Execution Draft.
            description: Create a new draft from an already published Execution Draft.
            requestBody:
                $ref: '#/components/requestBodies/ExecutionCompendiumDraftRequestBody'
            responses:
                '200':
                    $ref: '#/components/responses/ExecutionCompendiumModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

        delete:
            tags:
                - Execution Compendium (Draft)
            summary: Delete a Execution Compendium Draft.
            description: Delete a Execution Compendium Draft.
            responses:
                '200':
                    description: Deleted

    /projects/{project_id}/compendia/{compendium_id}/draft/actions/publish:
        parameters:
            -   $ref: '#/components/parameters/project_id'
            -   $ref: '#/components/parameters/compendium_id'

        post:
            tags:
                - Execution Compendium (Draft)
            summary: Publish a Execution Compendium draft
            description: Create a new Execution Compendium version and publish it and make it available to other users.
            requestBody:
                required: false
                content:
                    application/json: { }
            responses:
                '202':
                    $ref: '#/components/responses/ExecutionCompendiumModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

    #
    # Execution Compendium Draft (Files)
    #
    /projects/{project_id}/compendia/{compendium_id}/draft/files:
        parameters:
            -   $ref: '#/components/parameters/project_id'
            -   $ref: '#/components/parameters/compendium_id'
        post:
            tags:
                - Execution Compendium (Draft Files)
            summary: Start a Execution Compendium draft file upload(s).
            description: Start a Execution Compendium draft file upload(s).
            requestBody:
                $ref: '#/components/requestBodies/ExecutionCompendiumDraftFileDefinitionRequestBody'
            responses:
                '201':
                    $ref: '#/components/responses/ExecutionCompendiumFilesDefinitionModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'
        get:
            tags:
                - Execution Compendium (Draft Files)
            summary: List all files from the Execution Compendium Draft.
            description: List all files from the Execution Compendium Draft.
            responses:
                '200':
                    $ref: '#/components/responses/ExecutionCompendiumFilesDefinitionModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

    /projects/{project_id}/compendia/{compendium_id}/draft/files/{file_key}/content:
        parameters:
            -   $ref: '#/components/parameters/project_id'
            -   $ref: '#/components/parameters/compendium_id'
            -   $ref: '#/components/parameters/file_key'

        put:
            tags:
                - Execution Compendium (Draft Files)
            summary: Upload a new file content to the Execution Compendium Draft.
            description: Upload a new file content to the Execution Compendium Draft.
            requestBody:
                $ref: '#/components/requestBodies/BinaryFilesRequestBody'

            responses:
                '200':
                    $ref: '#/components/responses/ExecutionCompendiumFileEntryModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

        get:
            tags:
                - Execution Compendium (Draft Files)
            summary: Download a file from the Execution Compendium draft.
            description: Download a file from the Execution Compendium draft.
            responses:
                '200':
                    $ref: '#/components/responses/BinaryResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

    /projects/{project_id}/compendia/{compendium_id}/draft/files/{file_key}/commit:
        parameters:
            -   $ref: '#/components/parameters/project_id'
            -   $ref: '#/components/parameters/compendium_id'
            -   $ref: '#/components/parameters/file_key'

        post:
            tags:
                - Execution Compendium (Draft Files)
            summary: Commit a file from a Execution Compendium Draft.
            description: Create a new version of the request file.
            requestBody:
                required: false
                content:
                    application/json: { }
            responses:
                '200':
                    $ref: '#/components/responses/ExecutionCompendiumFileMetadataModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

    /projects/{project_id}/compendia/{compendium_id}/draft/files/{file_key}:
        parameters:
            -   $ref: '#/components/parameters/project_id'
            -   $ref: '#/components/parameters/compendium_id'
            -   $ref: '#/components/parameters/file_key'

        get:
            tags:
                - Execution Compendium (Draft Files)
            summary: Get a file metadata from the Execution Compendium draft.
            description: Get a file metadata from the Execution Compendium draft.
            responses:
                '200':
                    $ref: '#/components/responses/ExecutionCompendiumFileMetadataModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

        delete:
            tags:
                - Execution Compendium (Draft Files)
            summary: Delete a file from the Execution Compendium draft.
            description: Delete a file from the Execution Compendium draft.
            responses:
                '200':
                    description: Deleted

    #
    # User Workspace (Projects and Compendia)
    #
    /user/projects/:
        get:
            tags:
                - User workspace
            summary: Get all projects created by the user
            description: Get all projects created by the user
            responses:
                '200':
                    $ref: '#/components/responses/ListOfProjectCreatedModelResponseBody'

    /user/projects/{project_id}/compendia:
        parameters:
            -   $ref: '#/components/parameters/project_id'

        get:
            tags:
                - User workspace
            summary: List all compendia (Draft and Published) created by the user.
            description: List all compendia (Draft and Published) created by the user in the defined project.
            responses:
                '200':
                    $ref: '#/components/responses/ListOfExecutionCompendiumModelResponseBody'
                '404':
                    $ref: '#/components/responses/Error'

components:
    parameters:
        project_id:
            in: path
            name: project_id
            description: Project ID
            required: true
            schema:
                type: string
        pipeline_id:
            in: path
            name: pipeline_id
            description: Project Research Pipeline ID
            required: true
            schema:
                type: string
        compendium_id:
            in: path
            name: compendium_id
            description: Execution Compendium ID
            required: true
            schema:
                type: string
        file_key:
            in: path
            name: file_key
            description: File Key
            required: true
            schema:
                type: string

    schemas:

        #
        # General schemas
        #

        RootType:
            title: Landing Page
            description: 'The landing page that provides the service version.'
            type: object
            properties:
                application_name:
                    type: string
                    example: 'SpatioTemporal Open Research Manager'
                    description: 'Application name'
                version:
                    type: string
                    example: '0.1'
                    description: 'Application version'
            required:
               - application_name
               - version

        ExceptionType:
            title: Exception raised by the service.
            description: 'Information about the raised exception.'
            type: object
            properties:
                code:
                    type: string
                    example: '403'
                    description: 'Raised error code'
                description:
                    type: string
                    example: 'Unauthorized access'
                    description: 'Raised error description'

        #
        # Storm WS Schemas
        #

        # Project
        ProjectDefinitionModel:
            title: Research Project
            description: Storm Project model
            type: object
            properties:
                id:
                    type: string
                    example: 'project-example-1'
                    description: 'Research Project Unique identifier'
                metadata:
                    type: object
                    properties:
                        title:
                            type: string
                            example: 'Example of Research Project'
                            description: 'Project title'
                        description:
                            type: string
                            example: 'A exemplar description'
                            description: 'Project description'
                        subjects:
                            type: array
                            items:
                                type: string
                                example: ['Subject 1', 'Subject 2']
                            description: 'Project subjects'
                        rights:
                            type: array
                            items:
                                type: object
                                properties:
                                    title:
                                        type: string
                                        example: 'Right of the compendium software'
                                        description: 'Right title'
                                    description:
                                        type: string
                                        example: 'A right description'
                                        description: 'Right description'
                                    link:
                                        type: string
                                        example: 'https://link/to/right/full/document'
                                        description: 'Link to the complete right'


        ProjectCreatedModel:
            allOf:
                -   $ref: '#/components/schemas/ProjectDefinitionModel'
                -   type: object
                    properties:
                        pipeline_id:
                            type: integer
                            example: 2
                        created_at:
                            type: string
                            example: '2021-09-06T12:03:42.024484+00:00'
                            format: 'date-time'
                        updated_at:
                            type: string
                            example: '2021-09-06T12:03:42.024504+00:00'
                            format: 'date-time'
                        is_finished:
                            type: boolean
                            example: false

        #
        # Project Pipeline
        #
        ProjectPipelineDefinitionModel:
            title: Project Pipeline Definition model
            description: 'Project Pipeline definition model'
            type: object
            properties:
                label:
                    type: string
                    description: 'Pipeline label. Is used to identity the type/usage/context of the pipeline'
                    example: 'lulc_classification_pipeline'
                metadata:
                    type: object
                    properties:
                        description:
                            type: string
                            description: 'Pipeline description'
                            example: 'A pipeline with execution steps that evaluate a LULC classification map'
                    description: 'Pipeline metadata'

        ProjectPipelineModel:
            title: Project Pipeline
            description: 'Project Pipeline model'
            type: object
            properties:
                pipeline:
                    type: object
                    properties:
                        directed:
                            type: boolean
                            description: 'Flag that indicates whether the pipeline graph is directed or not'
                        type:
                            type: string
                            description: 'Graph type'
                            example: 'Directed Acyclic Graph'
                        metadata:
                            type: object
                            properties:
                                description:
                                  type: string
                                  description: 'Graph description'
                        edges:
                            type: array
                            items:
                                type: object
                                properties:
                                    source:
                                        type: string
                                        description: 'Execution Compendium ID used as source node in the edge'
                                        example: 'yadgcb0g64'
                                    target:
                                        type: string
                                        description: 'Execution Compendium ID used as target node in the edge'
                                        example: 'wt410zkq75'
                            description: 'List of pipeline compendia connections'
                        nodes:
                            type: array
                            items:
                                type: string
                                description: 'Execution Compendium ID represented by the node'
                                example: 'wt410zkq75'
                            description: 'List of pipeline compendia'

        # Graph
        ExecutionCompendiumMetadata:
            title: Execution Compendium metadata
            description: 'Metadata used to describe the Execution Compendium content (inputs, outputs, environments)'
            type: object
            properties:
                author:
                    type: string
                    example: 'Aladin'
                description:
                    type: string
                    example: 'A metadata description'

        ExecutionCompendiumDraftFile:
            title: Execution Compendium draft file
            description: 'Define files in the Execution Compendium draft'
            type: object
            properties:
                key:
                    type: string
                    example: 'input_file.txt'

        ExecutionCompendiumDraft:
            title: Execution Compendium Draft
            description: 'Execution Compendium draft definition'
            type: object
            properties:
                data:
                    type: object
                    properties:
                        inputs:
                            type: array
                            items:
                                $ref: '#/components/schemas/ExecutionCompendiumDraftFile'
                        outputs:
                            type: array
                            items:
                                $ref: '#/components/schemas/ExecutionCompendiumDraftFile'
                environment:
                    $ref: '#/components/schemas/ExecutionCompendiumDraftFile'
                command:
                    type: string
                    example: 'python3 myscript.py --arg1 --arg2'
                command_checksum:
                    type: string
                    example: '1220df718931fce2467010993b914f1ad3b9d00a50a4390d42e8e2138dcbb893514d'
                metadata:
                    $ref: '#/components/schemas/ExecutionCompendiumMetadata'


        #
        # Invenio Framework customized models
        #

        # Files
        ExecutionCompendiumFileMetadataModel:
            title: Execution Compendium document
            description: 'JSON document with information about a commited file.'
            type: object
            properties:
                size:
                    type: number
                    example: 956.0
                updated:
                    type: string
                    example: '2021-09-06T00:50:55.170782+00:00'
                    format: 'date-time'
                mimetype:
                    type: string
                    example: 'text/plain'
                checksum:
                    type: string
                    example: 'md5:b573b5f2995f011afc843710cf4739a6'
                key:
                    type: string
                    example: 'output_file.txt'
                storage_class:
                    type: string
                    example: 'S'
                version_id:
                    type: string
                    example: 'd408bc2c-0abe-43b7-b90e-342d4b97be3a'
                file_id:
                    type: string
                    example: '90a20606-9556-4d2e-a411-6645a739ba24'
                links:
                    type: object
                    properties:
                        self:
                            type: string
                            description: 'Link to the current file'
                            example: 'https://127.0.0.1:5000/pipeline/1/compendium/2k7cgyek84/files/output_file.txt'
                        content:
                            type: string
                            description: 'Link to download the current file'
                            example: 'https://127.0.0.1:5000/pipeline/1/compendium/2k7cgyek84/files/output_file.txt/content'
                created:
                    type: string
                    example: '2021-09-06T00:50:12.162515+00:00'
                    format: 'date-time'
                status:
                    type: string
                    example: [ completed ]

        ExecutionCompendiumFileEntryModel:
            title: Execution Compendium File entry.
            description: 'Execution Compendium file description'
            type: object
            properties:
                updated:
                    type: string
                    example: '2021-09-06T00:50:12.165072+00:00'
                    format: 'date-time'
                key:
                    type: string
                    example: 'output_file.txt'
                links:
                    type: object
                    properties:
                        self:
                            type: string
                            description: 'Link to the current file'
                            example: 'https://127.0.0.1:5000/pipeline/1/compendium/2k7cgyek84/files/output_file.txt'
                        content:
                            type: string
                            description: 'Link to download the file content'
                            example: 'https://127.0.0.1:5000/pipeline/1/compendium/2k7cgyek84/files/output_file.txt/content'
                created:
                    type: string
                    example: '2021-09-06T00:50:12.162515+00:00'
                status:
                    type: string
                    enum: [ pending, completed ]
                metadata:
                    type: object
                    description: 'metadata extracted from the defined tile'

        ExecutionCompendiumFilesDefinitionModel:
            title: Execution Compendium files definition model
            description: 'Model with files information from a Execution Compendium.'
            type: object
            properties:
                enabled:
                    type: boolean
                    example: true
                links:
                    type:
                        object
                    properties:
                        self:
                            type: string
                            description: 'Link to the Execution Compendium files'
                            example: 'https://127.0.0.1:5000/pipeline/1/compendium/2k7cgyek84/files'
                entries:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExecutionCompendiumFileEntryModel'

        # Links
        ExecutionCompendiumLinks:
            title: Execution Compendium Links
            description: 'Execution Compendium links'
            type: object
            properties:
                self:
                    type: string
                    description: 'Link to the current Execution Compendium draft'
                    example: 'https://127.0.0.1:5000/pipeline/1/compendium/2k7cgyek84/draft'
                latest:
                    type: string
                    description: 'Link to the latest version of the Execution Compendium associated to the draft'
                    example: 'https://127.0.0.1:5000/pipeline/1/compendium/2k7cgyek84/versions/latest'
                compendium:
                    type: string
                    description: 'Link to the parent of the Execution Compendium'
                    example: 'https://127.0.0.1:5000/pipeline/1/compendium/2k7cgyek84'
                publish:
                    type: string
                    description: 'Link to publish a new Execution Compendium version from the draft'
                    example: 'https://127.0.0.1:5000/pipeline/1/compendium/2k7cgyek84/draft/actions/publish'
                versions:
                    type: string
                    description: 'Link to all Execution Compendium versions'

        # Executiom Compendium Model (published)
        ExecutionCompendiumModel:
            title: Execution Compendium Model
            description: 'Execution Compendium Model object'
            type: object
            properties:
                id:
                    type: string
                    example: '2k7cgyek84'
                updated:
                    type: string
                    example: '2021-09-06T00:49:22.601795+00:00'
                    format: 'date-time'
                revision_id:
                    type: integer
                    example: 3
                node:
                    $ref: '#/components/schemas/ExecutionCompendiumDraft'
                links:
                    $ref: '#/components/schemas/ExecutionCompendiumLinks'


    requestBodies:

        #
        # General request bodies
        #
        BinaryFilesRequestBody:
            required: true
            content:
                application/octet-stream:
                    schema:
                        type: string
                        format: binary

        #
        # Project bodies
        #
        ProjectPipelineDefinitionRequestBody:
            required: true
            content:
              application/json:
                schema:
                    $ref: '#/components/schemas/ProjectPipelineDefinitionModel'
            description: 'A JSON document with the informations that will be used to identify and describe the generated graph'

        #
        # Files Request bodies
        #
        ExecutionCompendiumDraftFileDefinitionRequestBody:
            description: 'A JSON document with the files definitions'
            required: true
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ExecutionCompendiumDraftFile'


        #
        # Execution Compendium Draft request bodies
        #
        ExecutionCompendiumDraftRequestBody:
            description: 'A JSON document describing the Execution Compendium Draft.'
            required: true
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ExecutionCompendiumDraft'

        ProjectDefinitionModelRequestBody:
            description: 'A JSON document describing the project'
            required: true
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ProjectDefinitionModel'


    responses:

        #
        # General responses
        #
        Root:
            description: 'The landing page provides the version of service.'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RootType'

        Error:
            description: 'The return for actions that cause an server exception.'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ExceptionType'


        BinaryResponseBody:
            description: 'Binary file'
            content:
                application/octet-stream:
                    schema:
                        type: string
                        format: binary

        #
        # bdcrrm
        #
        ProjectCreatedModelResponseBody:
            description: 'A JSON document with the created project'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ProjectCreatedModel'

        ListOfProjectCreatedModelResponseBody:
            description: 'A JSON document with a list of current user project.'
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            $ref: '#/components/schemas/ProjectCreatedModel'

        ProjectPipelineModelResponseBody:
            description: 'A JSON document with the Research Pipeline'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ProjectPipelineModel'


        ListOfProjectPipelineModelResponseBody:
            description: 'A JSON document with a list of ProjectPipeline available.'
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            $ref: '#/components/schemas/ProjectPipelineModel'

        #
        # Invenio Framework based models
        #
        ExecutionCompendiumModelResponseBody:
            description: 'A JSON document with the Execution Compendium content.'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ExecutionCompendiumModel'

        ListOfExecutionCompendiumModelResponseBody:
            description: 'A JSON document with a list of Execution Compendia.'
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            $ref: '#/components/schemas/ExecutionCompendiumModel'

        ExecutionCompendiumFilesDefinitionModelResponseBody:
            description: 'A JSON document with the Execution Compendia files description'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ExecutionCompendiumFilesDefinitionModel'

        ExecutionCompendiumFileEntryModelResponseBody:
            description: 'A JSON document with the Execution Compendium file entry'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ExecutionCompendiumFileEntryModel'

        ExecutionCompendiumFileMetadataModelResponseBody:
            description: 'A JSON document with the complete description of a commited file'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ExecutionCompendiumFileMetadataModel'
